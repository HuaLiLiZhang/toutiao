<?xml version="1.0" encoding="UTF-8" ?>
<!--数据库select、insert、update、delete标签中编写查询的SQL语句，mybatis有两种方式进行数据库的操作，
1.使用注解方式
2.使用配置文件方式：
这个文件为第二种方式-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.news.toutiao.dao.NewsDAO">
    <!--
  为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
  例如：namespace="com.news.toutiao.dao.NewsDAO"（NewsDAO文件去除后缀)
-->
    <sql id="table">news</sql>
    <!--<sql id="selectFields">id,title, link, image, like_count, comment_count,created_date,user_id
    </sql>-->
    <sql id="selectFields">id,title,link,image,like_count,comment_count,created_date,user_id

    </sql>
    <select id="selectByUserIdAndOffset" resultType="com.news.toutiao.model.News">
        <!--
   在select、insert、update、delete标签中编写查询的SQL语句， 设置标签的id属性值必须是唯一的，不能够重复。使用parameterType属性
   指明查询时，使用的参数类型。resultType属性指明查询返回的结果集类型，resultType="com.news.toutiao.model.News"就表示将查询
   结果封装成一个News类的对象返回，News类就是news表所对应的实体类。
 -->
        SELECT
        <include refid="selectFields"/>
        FROM
        <include refid="table"/>

        <if test="userId != 0">
            WHERE user_id = #{userId}
        </if>
        ORDER BY id DESC
        LIMIT #{offset},#{limit}
    </select>
</mapper>
