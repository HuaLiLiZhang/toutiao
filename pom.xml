<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:context="http://www.springframework.org/schema/context"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.news</groupId>
	<artifactId>toutiao</artifactId>
	<!--<version>0.0.1-SNAPSHOT</version>-->
	<!--<version>1.0</version>-->
	<!--<packaging>war</packaging>-->
	<packaging>jar</packaging>
	<!--//这里jar改为war-->

	<name>toutiao</name>
	<description>Demo project for Spring Boot</description>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>1.3.5.RELEASE</version>
	<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-velocity</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

        <!--添加数据库依赖-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
			<version>5.0.8</version>
		</dependency>
<!--配置数据库的XML，两种方式，注解，XML-->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.1.1</version>
        </dependency>




		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.13</version>
		</dependency>
<!--七牛云图片云存储-->
		<dependency>
			<groupId>com.qiniu</groupId>
			<artifactId>qiniu-java-sdk</artifactId>
			<version>7.1.1</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<version>1.3.5.RELEASE</version>
			<!--this dependency can update the web after we alter the code ,but we do not
			run again -->
			<!--因为它为代码更改提供了一个非常快速的反馈循环。
			默认情况下，类路径上指向文件夹的任何条目都会受到更改的监视。
			注意，某些资源，如静态资产和视图模板，不需要重新启动应用程序。-->

			<!--也可以设置某些修改不启动，比如static仲恒的template
			spring.devtools.restart.exclude=static/**,public/**
			-->


		</dependency>

		<!--导入redis 支持的jedis的库-->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.8.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!--//邮件协议服务-->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>


		<!--用于测试的依赖-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<!-- Package as an executable jar -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--<configuration>-->
					<!--<excludeDevtools>-->
						<!--false-->
					<!--</excludeDevtools>-->
				<!--</configuration>-->
				<!--SpringBootDeveloper工具不限于本地开发。您还可以在远程运行应用程序时使用几个特性。
				远程支持是可选的。要启用它，您需要确保DevTools包含在重新打包的归档文件中，
				但是要设置秘钥。有安全风险。-->
			</plugin>
		</plugins>
	</build>


</project>
